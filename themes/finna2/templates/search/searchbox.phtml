<!-- START of: finna - search/searchbox.phtml -->
<?php
    $browse ??= false;
    $module = $this->layout()->templateDir;
    $action = $this->layout()->templateName;

    // Initialize from current search (if available and not explicitly overridden) or defaults:
    if ($results = ($this->results ?? $this->searchMemory()->getCurrentSearch())) {
      $params = $results->getParams();
      $this->searchClassId = $params->getSearchClassId();
    } else {
      $params = null;
      $this->searchClassId ??= $this->config()->get('config')->Site->defaultSearchBackend
        ?? 'Solr';
    }
    // Initialize from current search if eligible, defaults otherwise:
    if (isset($params) && $this->searchClassId === $params->getSearchClassId()) {
      $hiddenFilters = $params->getHiddenFilters();
      $lastSort = $params->getSort();
      $lastLimit = $params->getLimit();
      $options = $params->getOptions();
    } else {
      $hiddenFilters = $this->searchTabs()->getHiddenFilters($this->searchClassId, true, $this->ignoreHiddenFiltersInRequest ?? false);
      $lastSort = $this->searchMemory()->getLastSort($this->searchClassId);
      $lastLimit = $this->searchMemory()->getLastLimit($this->searchClassId);
      $options = $this->searchOptions($this->searchClassId);
    }
    // Override search class ID with searchbox-specific settings, if necessary:
    $overrideSearchClassId = $options->getSearchBoxSearchClassId();
    if ($overrideSearchClassId !== $this->searchClassId) {
      $this->searchClassId = $overrideSearchClassId;
      $options = $this->searchOptions($overrideSearchClassId);
    }

    // Load search actions and settings (if any):
    $keyboardLayouts = $this->searchbox()->getKeyboardLayouts();
    $handlers = $this->searchbox()->getHandlers($this->searchClassId, $this->searchIndex ?? null);
    $handlerCount = count($handlers);
    $basicSearch = $browse ? "browse-{$browse}" : $options->getSearchAction();
    $advSearch = $module != 'combined' ? $options->getAdvancedSearchAction() : 'search-advanced';
    $defaultSortApplied = null === $params || $lastSort == $options->getDefaultSortByHandler($params->getSearchHandler());

    if (!isset($this->filterList) || !isset($this->checkboxFilters)) {
        $params ??= $this->searchMemory()->getLastSearchParams($this->searchClassId);
        $filterList = $params->getFilterList(true);
        $checkboxFilters = $params->getCheckboxFacets();
    } else {
        $filterList = is_array($this->filterList) ? $this->filterList : [];
        $checkboxFilters = is_array($this->checkboxFilters) ? $this->checkboxFilters : [];
    }
    $filterDetails = $this->searchbox()->getFilterDetails($filterList, $checkboxFilters);
    $showFilters = $filterDetails && ($results || $options->getRetainFilterSetting());

    // Set up filters
    $this->layout()->finnaFilters = $showFilters ? $this->context($this)->renderInContext(
        'search/filters.phtml',
        [
            'filterList' => $filterList,
            'checkboxFilters' => $checkboxFilters,
            'defaultSortApplied' => $defaultSortApplied,
            'options' => $options,
            'params' => $params,
        ]
    ) : '';

    $searchTabs = $this->searchtabs()->getTabConfig($this->searchClassId, $this->lookfor, $this->searchIndex, $this->searchType, $hiddenFilters, $this->layout()->savedTabs);

    // Set up Finna Main Tabs:
    if (!$browse) {
      if (($module === 'search' && $action === 'results' && $this->searchType != 'advanced')
         || ($module === 'primo' && $action === 'search' && $this->searchType != 'advanced')
         || ($module === 'eds' && $action === 'search' && $this->searchType != 'advanced')
         || ($module === 'summon' && $action === 'search' && $this->searchType != 'advanced')
         || ($module == 'combined' && $action == 'results')
         || ($module === 'r2search' && $action === 'results' && $this->searchType != 'advanced')
         || ($module === 'l1' && $action === 'results')
         || ($module === 'blender' && $action === 'results' && $this->searchType != 'advanced')
      ) {
         $this->layout()->finnaMainTabs = $this->context($this)->renderInContext('search/searchTabs', ['searchTabs' => $searchTabs['tabs'], 'hiddenFilters' => $hiddenFilters]);
         $this->layout()->searchTabs = $searchTabs;
      }
    }
    $mainPage = $action === 'home' && in_array($module, ['combined', 'primo', 'search', 'r2search', 'eds', 'summon', 'authority']);
    $scrollData = $this->scrollData ?? $this->layout()->scrollData ?? null;
?>
<?php if ($this->searchType != 'advanced'): ?>
  <?php
    if ($this->searchbox()->autocompleteEnabled($this->searchClassId)) {
      $phrase = $this->autocomplete()->getPhraseSearch();
      if (!$browse) {
        $activeTab = $this->searchClassId;
        if (isset($searchTabs['selected'])) {
          $activeTab = $searchTabs['selected']['id'];
        }

        $acFilters = [];
        foreach ($this->autocomplete()->getFilters($activeTab) as $filter) {
          $filters = [];
          foreach ($filter['filters'] as $item) {
            $filters[] = $item[0] . '#' . $item[1];
          }
          $acFilters[$filter['label']] = implode('&', $filters);
        }

        $acHandlers = $this->autocomplete()->getHandlers($activeTab);
      }
    }

    $placeholder = $this->searchbox()->getPlaceholderText($searchTabs['selected']['id'] ?? null);
    if ($placeholder) {
      $placeholder = $this->translate($placeholder);
    } else {
      $placeholder = $this->translate('Find') . $this->translate('eol_ellipsis');
    }

    $searchboxAttributes = [
      'id' => 'searchForm_lookfor',
      'class' => 'searchForm_lookfor form-control search-query',
      'type' => 'search',
      'name' => 'lookfor',
      'value' => $this->lookfor,
      'aria-label' => $this->translate('search_terms'),
      'placeholder' => $placeholder,
    ];
    if ($this->searchbox()->autocompleteEnabled($this->searchClassId)) {
      $searchboxAttributes['class'] .= " autocomplete-finna searcher:{$this->searchClassId}"
        . ($this->searchbox()->autocompleteAutoSubmit($this->searchClassId) ? ' ac-auto-submit' : '');
      if (!empty($activeTab)) {
        $searchboxAttributes['class'] .= ' tab:' . str_replace(':', '###', $activeTab);
      }
      if ($browse || $activeTab === 'Combined') {
        $searchboxAttributes['class'] .= ' onlySuggestions:1';
      }
      if (!$browse && in_array($activeTab, ['Combined', 'Primo', 'Summon'])) {
        $searchboxAttributes['class'] .= ' suggestions:0';
      }
      if (!empty($acHandlers)) {
        $searchboxAttributes['class'] .= ' handlers:' . implode('|', array_map(function ($h) { return $h['handler']; }, $acHandlers));
      }
      if ($phrase) {
        $searchboxAttributes['class'] .= " phrase:$phrase";
      }
      if (!empty($acFilters)) {
        $searchboxAttributes['class'] .= ' filters:' . implode('||', array_map(function ($k, $v) { return $k . '|' . $v; }, array_keys($acFilters), $acFilters));
      }
    }
    if (!empty($keyboardLayouts)) {
      $searchboxAttributes['class'] .= ' with-keyboard-selection';
    }
  ?>
<div class="searchbox hidden-print">
  <div class="searchbox-flex <?=$mainPage ? 'searchbox-home' : '' ?> <?=$this->escapeHtmlAttr("searchbox-$module-$action")?>">
    <?php if ($module == 'record' || $module == 'collection'): ?>
      <div class="record-back hidden-print">
          <?php
            $html = $this->icon('record-back');
            $html .= '<span class="back-to-search-text hidden-xs hidden-sm hidden-md">' . $this->transEsc('Back to search results') . '</span>';
            $previousSearch = $this->searchMemory()->getLastSearchLink($html);
            if ($previousSearch !== '' && $this->searchMemory()->getLastSearchClassId() === $this->searchClassId):
          ?>
            <div class="back-to-search"><?=$previousSearch?></div>
          <?php endif; ?>
      </div>
    <?php endif; ?>
    <div class="search">
      <div class="keyboard-box">
        <div class="simple-keyboard"></div>
      </div>
      <form id="searchForm" role="search" class="searchForm navbar-form navbar-left  <?=$handlerCount < 2 ? 'input-field-only' : ''; ?>" method="get" action="<?=$this->url($basicSearch)?>" name="searchForm" autocomplete="off">
      <label for="searchForm_lookfor" class="sr-only" hidden><?=$this->transEsc('Find')?></label>
      <input<?=$this->htmlAttributes($searchboxAttributes)?>>
      <button id="searchForm-reset" class="searchForm-reset hidden" type="reset" tabindex="-1" aria-label="<?=$this->transEsc('searchform_reset_button')?>"><?=$this->icon('ui-reset-search');?></button>
      <?php if ($handlerCount > 1): ?>
        <div class="dropdown form-control type-dropdown">
        <?php
          $label = $handlers[0]['label'];
          $value = $handlers[0]['value'];
          foreach ($handlers as $handler) {
            if ($handler['selected']) {
              $label = $handler['label'];
              $value = $handler['value'];
              break;
            }
          }
        ?>
        <input id="searchForm_type" type="hidden" name="type" value="<?=$this->escapeHtmlAttr($value)?>" class="searchForm_type">
        <a href="#" class="dropdown-toggle" aria-haspopup="true" aria-expanded="false" aria-label="<?= $this->transEsc('Narrow Search') ?>" data-toggle="dropdown"><span><?=$this->transEsc($label)?></span> <?=$this->icon('type-dropdown-open') ?></a>
        <ul class="dropdown-menu" role="menu">
          <?php foreach ($handlers as $handler): ?>
            <li role="menuitem">
              <input type="hidden" value="<?=$this->escapeHtmlAttr($handler['value'])?>">
              <a class="select-type" href="#"><?=$this->transEsc($handler['label'])?></a>
            </li>
          <?php endforeach; ?>
        </ul>
      </div>
      <?php elseif ($handlerCount == 1): ?>
        <input type="hidden" name="type" value="<?=$this->escapeHtmlAttr($handlers[0]['value'])?>" class="searchForm_type">
      <?php endif; ?>
      <button type="submit" class="btn btn-primary <?= $handlerCount <= 1 ? 'wider-searchbutton' : '' ?>"><?=$this->icon('search') ?> <span class="sr-only"><?=$this->transEsc('Find')?></span></button>
      <div id="searchForm_controls">
        <?php if (!empty($keyboardLayouts)): ?>
          <?php
          // We don't include these by default in theme config to avoid bloat, but
          // since searchbox is on almost every page, it doesn't make a huge a huge
          // difference.
          $this->headScript()->appendFile('vendor/simple-keyboard/index.js');
          $this->headScript()->appendFile('vendor/simple-keyboard-layouts/index.js');
          $this->headLink()->appendStylesheet('vendor/simple-keyboard/index.css');
          ?>
          <div class="keyboard-selection dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" id="keyboard-selection-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <?=$this->icon('keyboard-o') ?>
              <?=$this->icon('caret-down') ?>
            </button>
            <ul class="dropdown-menu" aria-labelledby="keyboard-selection-button">
              <li>
                <a class="keyboard-selection-item" href="#" data-value="none"><?= $this->transEsc('None') ?></a>
              </li>
              <?php foreach ($keyboardLayouts as $keyboardLayout): ?>
                <li>
                  <a class="keyboard-selection-item" href="#" data-value="<?= $this->escapeHtmlAttr($keyboardLayout) ?>"><?= $this->transEsc("KeyboardLayout::$keyboardLayout") ?></a>
                </li>
              <?php endforeach; ?>
            </ul>
          </div>
        <?php endif; ?>
      </div>

      <?php $shards = $options->getShards();
      if ($options->showShardCheckboxes() && !empty($shards)): ?>
        <?php
        $selectedShards = $this->selectedShards ?? $options->getDefaultSelectedShards();
        ?>
        <br>
        <?php foreach ($shards as $shard => $val): ?>
          <?php $isSelected = empty($selectedShards) || in_array($shard, $selectedShards); ?>
            <input type="checkbox" <?=$isSelected ? 'checked="checked" ' : ''?>name="shard[]" value='<?=$this->escapeHtmlAttr($shard)?>'> <?=$this->transEsc($shard)?>
        <?php endforeach; ?>
      <?php endif; ?>
      <?php if (!$browse && (($hasDefaultsApplied ?? false) || !empty($filterDetails))): ?>
        <?php if ($options->getRetainFilterSetting() || $results): ?>
          <?php foreach ($filterDetails as $current): ?>
            <input class="applied-filter" id="<?=$this->escapeHtmlAttr($current['id'])?>" type="hidden" name="filter[]" value="<?=$this->escapeHtmlAttr($current['value'])?>">
          <?php endforeach; ?>
          <?php if ($hasDefaultsApplied ?? false): ?>
            <input class="applied-filter" id="dfApplied" type="hidden" name="dfApplied" value="1">
          <?php endif; ?>
        <?php endif; ?>
      <?php endif; ?>
      <?php foreach ($hiddenFilters as $key => $filter): ?>
        <?php foreach ($filter as $value): ?>
          <input type="hidden" name="hiddenFilters[]" value="<?=$this->escapeHtmlAttr($key) . ':' . $this->escapeHtmlAttr('"' . $value . '"')?>">
        <?php endforeach; ?>
      <?php endforeach; ?>
      <?php
        /* Show hidden field for active search class when in combined handler mode. */
        if ($this->searchbox()->combinedHandlersActive()) {
          echo '<input type="hidden" name="activeSearchClassId" value="' . $this->escapeHtmlAttr($this->searchClassId) . '">';
        }
        /* Load hidden limit preference from Session */
        if (!empty($lastLimit)) {
          echo '<input type="hidden" name="limit" value="' . $this->escapeHtmlAttr($lastLimit) . '">';
        }
        if (!empty($lastSort)) {
          echo '<input type="hidden" name="sort" value="' . $this->escapeHtmlAttr($lastSort) . '">';
        }
      ?>
    </form>
    </div>
    <?php if (!$browse && !$mainPage && $advSearch): ?>
      <a href="<?=$this->url($advSearch)?>" class="btn btn-link btn-advanced hidden-xs"><?=$this->icon('search-advanced', 'search-advanced-icon') ?><?=$this->transEsc('Advanced Search')?></a>
    <?php endif; ?>
    <div class="search-tooltip"><?php
        $searchTypes = ['search' => 'local', 'primo' => 'pci', 'eds' => 'eds', 'r2search' => 'R2', 'summon' => 'summon'];
        if (isset($searchTypes[$module]) && !$this->translationEmpty('tooltip_' . $searchTypes[$module] . '_search_html')) {
          $tooltipClass = 'tooltip-search-' . $searchTypes[$module];
          $tooltipText = $this->translate('tooltip_' . $searchTypes[$module] . '_search_html');
        }
        if (isset($tooltipClass) && isset($tooltipText)):
      ?>
        <button aria-label="<?= $this->transEsc('Search Tips') ?>" class="tooltip-button <?=$tooltipClass?> hidden-xs" data-toggle="tooltip" data-placement="auto" data-html="true" data-original-title="<?=$this->escapeHtmlAttr($tooltipText)?>">
          <?=$this->icon('help', 'search-help-icon') ?>
        </button>
    <?php endif; ?></div>
    <?php if ($module != 'record' && $module != 'collection'): ?>
      <?php if ($browse || $mainPage || ($module === 'authority' && $action === 'search')): ?>
        <div class="search-links">
          <?php if ($advSearch): ?>
          <a href="<?=$this->url($advSearch)?>" class="btn btn-link btn-advanced"><?=$this->icon('search-advanced') ?> <?=$this->transEsc('Advanced Search')?></a>
          <?php endif; ?>
          <?php if ($browse || !in_array($this->searchClassId, ['Solr', 'R2'])): ?>
          <a href="<?=$this->url('home');?>" class="btn btn-link btn-basic"><?=$this->icon('search-basic') ?> <?=$this->transEsc('Basic Search')?></a>
          <?php endif; ?>

          <?php if ($this->primo()->isAvailable() && ($browse || $this->searchClassId !== 'Primo')) : ?>
          <a href="<?=$this->url('primo-home');?>" class="btn btn-link btn-primo"><?=$this->icon('search-primo') ?> <?=$this->transEsc('Primo Search')?></a>
          <?php endif; ?>

          <?php if ($this->eds()->isAvailable() && ($browse || $this->searchClassId !== 'EDS')) : ?>
          <a href="<?=$this->url('eds-home');?>" class="btn btn-link btn-primo"><?=$this->icon('search-eds') ?> <?=$this->transEsc('EDS Search')?></a>
          <?php endif; ?>

          <?php if ($this->summon()->isAvailable() && ($browse || $this->searchClassId !== 'Summon')) : ?>
          <a href="<?=$this->url('summon-home');?>" class="btn btn-link btn-primo"><?=$this->icon('search-summon') ?> <?=$this->transEsc('Summon Search')?></a>
          <?php endif; ?>

          <?php if ($this->authority()->isAvailable() && ($browse || $this->searchClassId !== 'SolrAuth')) : ?>
            <a href="<?=$this->url('authority-home');?>" class="btn btn-link btn-authority"><?=$this->icon('search-authority') ?> <?=$this->transEsc('Authority Search')?></a>
          <?php endif; ?>
        </div>
      <?php endif; ?>
    <?php else: ?>
      <?php if ($scrollData && ($scrollData['previousRecord'] || $scrollData['nextRecord'])): ?>
        <ul class="pager hidden-print" id="view-pager">
            <?php if ($scrollData['previousRecord']): ?>
                <?php if ($scrollData['firstRecord']): ?>
                <li>
                  <a href="<?=$this->escapeHtmlAttr($this->recordLinker()->getUrl($scrollData['firstRecord']))?>" rel="nofollow"><?=$this->icon('pager-first') ?></i><span class="sr-only"><?=$this->transEsc('First Record')?></span></a>
                </li>
                <?php endif; ?>
              <li class="pager-previous-record">
                <a href="<?=$this->escapeHtmlAttr($this->recordLinker()->getUrl($scrollData['previousRecord']))?>" rel="nofollow"><?=$this->icon('pager-prev') ?><span class="sr-only"><?=$this->transEsc('Previous Record')?></span></a>
              </li>
            <?php else: ?>
              <?php if ($scrollData['firstRecord']): ?>
                <li class="disabled" title="<?=$this->transEsc('First Record')?>"><a><?=$this->icon('pager-first') ?></a></li>
              <?php endif; ?>
                <li class="disabled" title="<?=$this->transEsc('Previous Record')?>"><a><?=$this->icon('pager-prev') ?></a></li>
            <?php endif; ?>
          <li class="pager-text">
              <?=$this->transEsc('of_num_results', [
                  '%%position%%' => $this->localizedNumber($scrollData['currentPosition']),
                  '%%total%%' => $this->localizedNumber($scrollData['resultTotal']),
              ]) ?>
          </li>
            <?php if ($scrollData['nextRecord']): ?>
              <li class="pager-next-record">
                <a href="<?=$this->escapeHtmlAttr($this->recordLinker()->getUrl($scrollData['nextRecord']))?>" rel="nofollow"><?=$this->icon('pager-next') ?><span class="sr-only"><?=$this->transEsc('Next Record')?></span></a>
              </li>
              <?php if ($scrollData['lastRecord']): ?>
                <li>
                  <a href="<?=$this->escapeHtmlAttr($this->recordLinker()->getUrl($scrollData['lastRecord']))?>" rel="nofollow"><?=$this->icon('pager-last') ?><span class="sr-only"><?=$this->transEsc('Last Record')?></span></a>
                </li>
              <?php endif; ?>
            <?php else: ?>
              <li class="disabled" title="<?=$this->transEsc('Next Record')?>"><a><?=$this->icon('pager-next') ?></a></li>
                <?php if ($scrollData['lastRecord']): ?>
                  <li class="disabled" title="<?=$this->transEsc('Last Record')?>"><a><?=$this->icon('pager-last') ?></a></li>
                <?php endif; ?>
            <?php endif; ?>
        </ul>
      <?php endif; ?>
    <?php endif; ?>
  </div>
</div>
<?php endif; ?>
<!-- END of: finna - search/searchbox.phtml -->
